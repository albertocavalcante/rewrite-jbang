---
description: 
globs: 
alwaysApply: true
---
# OpenRewrite JBang Script Upgrade Workflow

This document outlines the incremental process for updating `rewrite-jbang/rewrite.java` to align with `rewrite-maven-plugin` releases, eventually targeting compatibility with OpenRewrite v8 (used in plugin v6+).

## Goal

Incrementally update `rewrite-jbang/rewrite.java`, aligning it feature-by-feature and dependency-by-dependency (excluding the v8 BOM update until explicitly authorized) with the evolution of the `rewrite-maven-plugin`.

## Repositories

*   **Working Repo:** `rewrite-jbang` (branch: `upgrade-deps`)
*   **Reference Repo:** Local clone of `openrewrite/rewrite-maven-plugin` at `$HOME/dev/workspace/rewrite-maven-plugin`.

## Process per Plugin Tag Increment

Let `P` be the previously processed plugin tag and `C` be the current tag being processed.

1.  **Checkout Plugin Tag:**
    *   Command: `cd $HOME/dev/workspace/rewrite-maven-plugin && git checkout C`
    *   AI can proceed automatically.
2.  **Check Plugin BOM Version:**
    *   Command: `cd /Users/albertocavalcante/dev/workspace/rewrite-maven-plugin && read pom.xml` (look for `<rewrite.version>` property).
    *   Note the BOM version `BOM_C` used in tag `C`.
    *   AI can proceed automatically.
3.  **Analyze Code Diff:**
    *   Command: `cd $HOME/dev/workspace/rewrite-maven-plugin && git diff P..C -- src/main/java/ | cat`
    *   Identify API changes or refactorings relevant to the patterns/classes used in `rewrite-jbang/rewrite.java`.
    *   AI can proceed automatically.
4.  **Analyze POM Diff:**
    *   Command: `cd /Users/albertocavalcante/dev/workspace/rewrite-maven-plugin && git diff P..C -- pom.xml | cat`
    *   Confirm if the `<rewrite.version>` property changed between `P` and `C`.
    *   AI can proceed automatically.
5.  **Apply Code Changes (Requires Authorization):**
    *   If step 3 identified relevant code changes:
        *   Propose the specific `edit_file` commands for `rewrite-jbang/rewrite.java`.
        *   **Wait for user authorization before executing edits.**
6.  **Apply BOM Change (Conditional, Requires Authorization):**
    *   If step 4 confirmed `<rewrite.version>` changed to `BOM_C`, **AND** `BOM_C` is **NOT** a v8.x version (does not start with `8.`):
        *   Propose the `edit_file` command to update `//DEPS org.openrewrite:rewrite-bom:...` in `rewrite-jbang/rewrite.java` to `BOM_C`.
        *   **Wait for user authorization before executing the edit.**
    *   **CRITICAL:** Do **NOT** propose or apply any BOM update if `BOM_C` is v8.x until explicitly instructed later in the process.
7.  **Test Changes:**
    *   Command: `cd /Users/albertocavalcante/dev/workspace/rules_antlr && jbang ../rewrite-jbang/rewrite.java --recipes org.openrewrite.java.format.AutoFormat`
    *   Check for exit code 0 and absence of new compilation or runtime errors in the log output.
    *   AI can proceed automatically *after* any authorized changes have been applied.
8.  **Commit Changes (Requires Authorization):**
    *   If steps 5 or 6 resulted in authorized and applied changes, and step 7 passed:
        *   Report success.
        *   Propose `git add rewrite.java && git commit ...` with a descriptive message (e.g., `feat/refactor/fix: Align with plugin C (BOM BOM_C if updated)`).
        *   **Wait for user authorization before executing the commit.**
9.  **Proceed to Next Tag (Requires Authorization):**
    *   Report completion for tag `C`.
    *   Identify the next tag `N` from the tag list.
    *   **Wait for user authorization before starting analysis for tag `N`.** (Exception: User may pre-authorize checkout only).

## V8 Transition

*   Continue the incremental process through all `v5.x` tags.
*   When the next tag is `v6.0.0` (or whichever first uses OpenRewrite v8), perform steps 1-4 (Checkout, Check BOM, Analyze Diffs).
*   At this point, the diff analysis should reveal the code changes needed for v8 compatibility.
*   Apply these code changes first (step 5, requires authorization).
*   **Explicitly discuss** with the user the plan to update the BOM to v8.x **and get authorization** before proceeding with the BOM update (step 6).
*   Handle expected compilation errors after the v8 BOM update by applying the fixes identified from the plugin diffs. 